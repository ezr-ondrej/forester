webrpc = v1

name = forester-controller
version = v0.0.1

struct Image
  - ID: int64
    + json = id
  - Name: string
    + json = name

service ImageService
  - Create(image: Image) => (id: int64, uploadURL: string)
  - GetByID(imageID: int64) => (image: Image)
  - Find(pattern: string) => (image: Image)
  - List(limit: int64, offset: int64) => (images: []Image)
  - Delete(name: string)

struct Appliance
  - ID: int64
    + json = id
  - Name: string
    + json = name
  - Kind: int16
    + json = kind
  - URI: string
    + json = uri

service ApplianceService
  - Create(name: string, kind: int16, uri: string)
  - Find(name: string) => (appliance: Appliance)
  - List(limit: int64, offset: int64) => (appliances: []Appliance)
  - Enlist(name: string, namePattern: string)
  - Delete(name: string)

struct NewSystem
  - HwAddrs: []string
    + json = hw_addrs
  - Facts: map<string,string>
    + json = facts
  - ApplianceName: string
    + json = appliance_name,omitempty
  - UID: string
    + json = uid,omitempty

struct System
  - ID: int64
    + json = id
  - Name: string
    + json = name
  - HwAddrs: []string
    + json = hw_addrs
  - Facts: map<string,string>
    + json = facts
  - Acquired: bool
    + json = acquired
  - AcquiredAt: timestamp
    + json = acquired_at
  - ImageID?: int64
    + json = image_id,omitempty
  - Comment: string
    + json = comment
  - ApplianceID?: int64
    + json = appliance_id,omitempty
  - Appliance?: Appliance
    + json = appliance,omitempty
  - UID?: string
    + json = uid,omitempty

service SystemService
  - Register(system: NewSystem)
  - Find(pattern: string) => (system: System)
  - Acquire(systemPattern: string, imagePattern: string, comment: string)
  - Release(systemPattern: string)
  - List(limit: int64, offset: int64) => (systems: []System)
  - Reset(systemPattern: string)
